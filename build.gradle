/*
 * Copyright 2020 Ilya Titovskiy
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

buildscript {
    apply from: file("${rootDir}/dependencies.gradle")
}

plugins {
    id "org.jetbrains.kotlin.jvm" version "$kotlinVersion"
    id "io.gitlab.arturbosch.detekt" version "$detektVersion"
}

allprojects {
    repositories {
        mavenCentral()
        jcenter()
    }
    version = '0.1.0-SNAPSHOT'
    group = "com.izalith.imagesecret"
    apply plugin: 'jacoco'
}

configure(subprojects.findAll { it.name == 'steglib' || it.name == 'backend' }) {
    apply plugin: "org.jetbrains.kotlin.jvm"
    apply plugin: "io.gitlab.arturbosch.detekt"
    apply plugin: 'java'
    apply plugin: 'idea'

    compileKotlin {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
        kotlinOptions {
            jvmTarget = "1.8"
            apiVersion = "1.3"
            languageVersion = "1.3"
        }
    }

    dependencies {
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
        implementation libraries.guava
        implementation libraries.apacheCommons
        implementation libraries.commonsIo
    }

    idea {
        module {
            downloadJavadoc = true
            downloadSources = true
        }
    }
}

task codeCoverageReport(type: JacocoReport) {
    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

    subprojects.each {
        sourceSets it.sourceSets.main
    }

    reports {
        xml.enabled true
        xml.destination file("${buildDir}/reports/jacoco/report.xml")
        html.destination file("${buildDir}/reports/jacoco/report.html")
        html.enabled true
        csv.enabled false
    }
}

codeCoverageReport.dependsOn {
    subprojects.findAll { it.name == 'steglib' || it.name == 'backend' }.test
}